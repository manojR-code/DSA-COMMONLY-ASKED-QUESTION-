/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next==null){
            head=null;
            return head;
        }
        if(head.next.next==null && n==1){
            head.next=null;
            return head;
        }
        if(head.next.next==null && n==2){
            head=head.next;
            return head;
        }
        int size=0;
        ListNode list;
        ListNode list2;
        list=head;
        list2=head.next;
        while(list!=null){
            size++;
            list=list.next;
        }
        if(size-n==0){
            head=head.next;
        }
        list=head;
        for(int i=0;i<(size-n)-1;i++){
            list=list.next;
            list2=list2.next;
        }
        list.next=list2.next;
        return head;
    }
}
